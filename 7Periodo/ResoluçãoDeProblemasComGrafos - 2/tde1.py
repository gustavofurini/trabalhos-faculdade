# -*- coding: utf-8 -*-
"""tde1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VkbY6UqfH1hLyW2cumnIAk8Zn_7MKr8Z
"""

from collections import defaultdict

class Grafo:
    def __init__(self):
        self.lista_adjacencias = defaultdict(list)

    def adiciona_vertice(self, u):
        if u not in self.lista_adjacencias:
            self.lista_adjacencias[u] = []

    def adiciona_aresta(self, u, v, peso):
        self.adiciona_vertice(u)
        self.adiciona_vertice(v)
        self.lista_adjacencias[u].append((v, peso))

    def remove_aresta(self, u, v):
        if u in self.lista_adjacencias:
            self.lista_adjacencias[u] = [(vertice, peso) for vertice, peso in self.lista_adjacencias[u] if vertice != v]

    def remove_vertice(self, u):
        del self.lista_adjacencias[u]
        for vertice in self.lista_adjacencias:
            self.lista_adjacencias[vertice] = [(v, peso) for v, peso in self.lista_adjacencias[vertice] if v != u]


    def grau_entrada(self, u):
        grau_entrada = 0
        for adjacencias in self.lista_adjacencias:
            for adjacencias, _ in self.lista_adjacencias[adjacencias]:
                if adjacencias == u:
                    grau_entrada += 1
        return grau_entrada


    def grau_saida(self, u):
        grau_saida = 0
        if u in self.lista_adjacencias:
          grau_saida = len(self.lista_adjacencias[u])
        return grau_saida


    def grau(self, u):
        return self.grau_entrada(u) + self.grau_saida(u)

    def get_peso(self, u, v):
        for vertice, peso in self.lista_adjacencias.get(u, []):
            if vertice == v:
                return peso
        return None

    def tem_aresta(self, u, v):
          return v in [vertice for vertice, _ in self.lista_adjacencias.get(u, [])]

    def imprime_lista_adjacencias(self):
        for vertice in self.lista_adjacencias:
            print(f"{vertice}: ")
            for v, peso in self.lista_adjacencias[vertice]:
                print(f"('{v}', {peso}) -> ")
            print()


# Exemplo de utilização:
G = Grafo()
G.adiciona_vertice("Pedro")
G.adiciona_vertice("Maria")
G.adiciona_vertice("Antonio")
G.adiciona_vertice("Clara")
G.adiciona_vertice("Pedro")
G.adiciona_vertice("Joaquim")

G.adiciona_aresta("Pedro", "Maria", 3)
G.adiciona_aresta("Pedro", "Antonio", 1)
G.adiciona_aresta("Maria", "Clara", 2)
G.adiciona_aresta("Clara", "Maria", 5)
G.adiciona_aresta("Joaquim", "Antonio", 10)
G.adiciona_aresta("Antonio", "Jose", 5)


G.remove_aresta("Antonio", "Jose")
G.imprime_lista_adjacencias()

